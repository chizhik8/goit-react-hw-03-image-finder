{"version":3,"sources":["components/Searchbar/Searchbar.js","components/LoaderBall/LoaderBall.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","services/imagesApi.js","App.js","index.js"],"names":["Searchbar","state","query","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","LoaderBall","color","height","width","ImageGallery","images","onClick","map","image","name","largeImageURL","src","webformatURL","alt","tags","webformatWidth","webformatHeight","id","Button","Modal","handleKeyDown","code","onClose","window","addEventListener","removeEventListener","children","searchQuery","page","axios","get","then","response","data","hits","App","loading","error","showModals","fetchImages","imagesApi","prevState","catch","finally","handleSearchFormsSubmit","hideModals","prevProps","scrollTo","top","document","documentElement","scrollHeight","behavior","message","length","ReactDOM","render","getElementById"],"mappings":"0OAIaA,EAAb,4MAKEC,MAAQ,CAAEC,MAAO,IALnB,EAOEC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEH,MAAOE,EAAEE,OAAOC,SARpC,EAYEC,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKV,MAAMC,OAC/B,EAAKG,SAAS,CAACH,MAAO,MAf1B,uDAmBI,OACE,wBAAQU,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaD,SAAUE,KAAKL,aAA5C,UACE,wBAAQM,KAAK,SAASF,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAEF,uBACEL,MAAOM,KAAKZ,MAAMC,MAClBa,SAAUF,KAAKV,aACfS,UAAU,mBACVE,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,sCAhCxB,GAA+BC,a,iBCDhB,SAASC,IACpB,OACI,qBAAKR,UAAU,aAAf,SACI,cAAC,IAAD,CAAQE,KAAK,eAAeO,MAAM,UAAUC,OAAQ,GAAIC,MAAO,OCH5D,SAASC,EAAT,GAA0C,IAAnBC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,QAC5C,OACI,oBAAId,UAAU,eAAd,SACGa,EAAOE,KAAI,SAAAC,GAAK,OACf,oBAAmBhB,UAAU,mBAA7B,SACE,qBACAc,QAASA,EACTG,KAAMD,EAAME,cACZC,IAAKH,EAAMI,aACXC,IAAKL,EAAMM,KACXX,MAAOK,EAAMO,eACbb,OAAQM,EAAMQ,gBACdxB,UAAU,4BARHgB,EAAMS,SCLV,SAASC,EAAT,GAA8B,IAAZZ,EAAW,EAAXA,QAC7B,OACI,qBAAKd,UAAU,kBAAf,SACI,wBAAQE,KAAK,SAASF,UAAU,SAASc,QAASA,EAAlD,yB,ICHSa,E,4MAKnBC,cAAgB,SAAApC,GACC,WAAXA,EAAEqC,MACJ,EAAK/B,MAAMgC,W,kEANOC,OAAOC,iBAAiB,UAAW/B,KAAK2B,iB,6CAErCG,OAAOE,oBAAoB,UAAWhC,KAAK2B,iB,+BASlE,OACE,qBAAK5B,UAAU,UAAf,SACE,qBAAKA,UAAU,QAAf,SACGC,KAAKH,MAAMoC,iB,GAfa3B,a,iBCOpB,EAPc,SAAC4B,EAAaC,GAEvC,OAAOC,IACFC,IADE,6EACwEH,EADxE,iBAC4FC,EAD5F,4BADK,uCAGPG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,SCgEzBC,EA5Df,4MAEEtD,MAAQ,CACNwB,OAAQ,GACR+B,SAAS,EACTC,MAAO,KACPV,YAAa,GACbC,KAAM,EACNlB,cAAe,KACf4B,YAAY,GAThB,EAsBEC,YAAc,WAAO,IAAD,EACY,EAAK1D,MAA3B8C,EADU,EACVA,YAAaC,EADH,EACGA,KACrB,EAAK3C,SAAS,CAACmD,SAAS,IACxBI,EAA+Bb,EAAaC,GACzCG,MAAK,SAAA1B,GAAM,OACV,EAAKpB,UAAS,SAAAwD,GAAS,MAAK,CAAEpC,OAAO,GAAD,mBAAMoC,EAAUpC,QAAhB,YAA2BA,IAASuB,KAAMa,EAAUb,KAAO,SAChGc,OAAM,SAAAL,GAAK,OAAI,EAAKpD,SAAS,CAAEoD,aAC/BM,SAAQ,kBAAM,EAAK1D,SAAS,CAAEmD,SAAS,QA7B9C,EAgCEQ,wBAA0B,SAAA9D,GACxB,EAAKG,SAAS,CAAE0C,YAAa7C,EAAO8C,KAAM,EAAGvB,OAAQ,MAjCzD,EAoCEiC,WAAa,SAACtD,GACZ,EAAKC,UAAS,SAAAwD,GAAS,MAAK,CAAEH,YAAaG,EAAUH,WAAY5B,cAAe1B,EAAEE,OAAOuB,UArC7F,EAwCIoC,WAAa,WACb,EAAK5D,UAAS,SAAAwD,GAAS,MAAK,CAAEH,YAAaG,EAAUH,WAAY5B,cAAe,UAzCpF,iEAYsBoC,EAAWL,GACXA,EAAUd,cACVlC,KAAKZ,MAAM8C,aAG3BlC,KAAK8C,cAEPhB,OAAOwB,SAAS,CAACC,IAAKC,SAASC,gBAAgBC,aAAaC,SAAU,aAnB1E,+BA4CY,IAAD,EACuD3D,KAAKZ,MAA3DwB,EADD,EACCA,OAAQ+B,EADT,EACSA,QAASC,EADlB,EACkBA,MAAO3B,EADzB,EACyBA,cAAe4B,EADxC,EACwCA,WAE/C,OACE,gCACE,cAAC,EAAD,CAAW/C,SAAUE,KAAKmD,0BACzBP,GAAS,wCAAWA,EAAMgB,WAC1BjB,GAAW,cAACpC,EAAD,IACXK,EAAOiD,OAAS,GAAK,cAAClD,EAAD,CAAcC,OAAQA,EAAQC,QAASb,KAAK6C,aACjEjC,EAAOiD,OAAS,IAAMlB,GAAW,cAAClB,EAAD,CAAQZ,QAASb,KAAK8C,cACvDD,GAAc,cAAC,EAAD,CAAOhB,QAAS7B,KAAKoD,WAArB,SAAiC,qBAAKlC,IAAKD,EAAeG,IAAI,0BAtDrF,GAAyBd,aCLzBwD,IAASC,OAAO,cAAC,EAAD,IAASP,SAASQ,eAAe,U","file":"static/js/main.0d02d599.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport '../../index.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class Searchbar extends Component {\r\n  static propTypes = {\r\n    query: PropTypes.string,\r\n  }\r\n\r\n  state = { query: ''}\r\n  \r\n  handleChange = e => { \r\n    this.setState({ query: e.target.value })\r\n    \r\n  }\r\n\r\n  handleSubmit = e => { \r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({query: ''});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n          <input\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Searchbar","import React from 'react'\r\nimport Loader from \"react-loader-spinner\"\r\n\r\nexport default function LoaderBall() {\r\n    return (\r\n        <div className=\"LoaderBall\">\r\n            <Loader type=\"BallTriangle\" color=\"#3F51B5\" height={80} width={80} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport '../../index.css'\r\n\r\nexport default function ImageGallery({images, onClick}) {\r\n  return (\r\n      <ul className=\"ImageGallery\">\r\n        {images.map(image => (\r\n          <li key={image.id} className=\"ImageGalleryItem\">\r\n            <img\r\n            onClick={onClick}\r\n            name={image.largeImageURL}\r\n            src={image.webformatURL}\r\n            alt={image.tags}\r\n            width={image.webformatWidth}\r\n            height={image.webformatHeight}\r\n            className=\"ImageGalleryItem-image\" />\r\n          </li>))}\r\n      </ul>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Button({ onClick }) {\r\n    return (\r\n        <div className=\"ButtonContainer\">\r\n            <button type='button' className=\"Button\" onClick={onClick}>Load more</button>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() { window.addEventListener('keydown', this.handleKeyDown) };\r\n\r\n  componentWillUnmount() { window.removeEventListener('keydown', this.handleKeyDown) }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  }\r\n    \r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\">\r\n        <div className=\"Modal\">\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import axios from 'axios'\r\n\r\nconst fetchImagesWithQuery = (searchQuery, page) => {\r\n    const key = '19548879-107cb87ae385e6159bb9744cd';\r\n    return axios\r\n        .get(`https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${page}&per_page=12&key=${key}`)\r\n        .then(response => response.data.hits);\r\n};\r\n\r\nexport default { fetchImagesWithQuery };","import React, { Component } from 'react'\n\nimport { Searchbar } from './components/Searchbar/Searchbar';\nimport LoaderBall from './components/LoaderBall/LoaderBall';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\n\nimport imagesApi  from './services/imagesApi';\n\nexport class App extends Component {\n\n  state = {\n    images: [],\n    loading: false,\n    error: null,\n    searchQuery: '',\n    page: 1,\n    largeImageURL: null,\n    showModals: false,\n  }\n  \n  componentDidUpdate( prevProps, prevState ) { \n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n\n    if (prevQuery !== nextQuery) {\n      this.fetchImages();\n    }\n    window.scrollTo({top: document.documentElement.scrollHeight,behavior: 'smooth',});\n  };\n\n  fetchImages = () => { \n    const { searchQuery, page } = this.state;\n    this.setState({loading: true});\n    imagesApi.fetchImagesWithQuery(searchQuery, page)\n      .then(images =>\n        this.setState(prevState => ({ images: [...prevState.images, ...images], page: prevState.page + 1 })))\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ loading: false }));\n  }\n\n  handleSearchFormsSubmit = query => { \n    this.setState({ searchQuery: query, page: 1, images: [] });\n  }\n\n  showModals = (e) => { \n    this.setState(prevState => ({ showModals: !prevState.showModals, largeImageURL: e.target.name}))\n  }\n\n    hideModals = () => { \n    this.setState(prevState => ({ showModals: !prevState.showModals, largeImageURL: null}))\n  }\n\n  render() {\n    const { images, loading, error, largeImageURL, showModals } = this.state;\n    \n    return (\n      <div>\n        <Searchbar onSubmit={this.handleSearchFormsSubmit}/>\n        {error && <p>Wrong: {error.message}</p>}\n        {loading && <LoaderBall/>}\n        {images.length > 0 && <ImageGallery images={images} onClick={this.showModals} />}\n        {images.length > 0 && !loading && <Button onClick={this.fetchImages} />}\n        {showModals && <Modal onClose={this.hideModals}><img src={largeImageURL} alt='Large format'/></Modal>}\n      </div>\n    )\n  }\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}